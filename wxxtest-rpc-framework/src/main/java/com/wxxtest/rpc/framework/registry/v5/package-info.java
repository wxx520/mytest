package com.wxxtest.rpc.registration.center.client.rpc.framework.registry.v5;
/**
 * 代码的可维护性可读性可以作为衡量代码的质量关键性指标，完成功能只是最基本的要求。
 * 而代码可读性、可维护性是有设计者组织代码的方式决定的。
 * 设计者的写代码的心态和专业经验能力会直接决定代码的组织。
 *
 * 【心态】：服务用户：即以简单直接符合自然逻辑的方式，让用户理解设计者想表达的内容
 *  接口定义是使用用户友好的
 *  代码组织结构是阅读用户友好的
 *
 * 【方法/专业经验】
 * 1、良好惯例的遵守：如Controller层主要用于参数的处理、Service业务逻辑、dao层数据访问层
 *
 * 2、代码结构：总分结构进行组织和拆分
 *
 * 上述原则的遵守的主体，包括但不限于项目、包、类、方法甚至是中间变量。
 * 2.1 根据各自的角色拆分，以及命名：
 *     如对于比较大的项目，client是提供给用户的接口，有实际提供服务的模块
 * 2.2 类一般不超100行，行数过多时考虑拆成多个类
 * 2.3 方法一般不超过20行，行数过多时，拆成多个更小的方法，方法命名直接表达方法内这段代码的目的
 * 2.4 不要本末倒置，为了减少代码的行数去省去必要的中间变量的命名，导致代码可读性降低，
 *     中间变量的命令，是又一次对这一行代码的额外说明
 *
 *
 */